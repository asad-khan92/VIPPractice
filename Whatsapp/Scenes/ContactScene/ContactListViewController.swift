//
//  ContactListViewController.swift
//  Whatsapp
//
//  Created by Asad Khan on 2/2/18.
//  Copyright (c) 2018 Asad Khan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Contacts

protocol ContactListDisplayLogic: class
{
  func displaySomething(viewModel: ContactList.FetchContacts.ViewModel)
    
//    func displayExpirationDate(viewModel: CreateOrder.FormatExpirationDate.ViewModel)
//    func displayCreatedOrder(viewModel: CreateOrder.CreateOrder.ViewModel)
//    func displayOrderToEdit(viewModel: CreateOrder.EditOrder.ViewModel)
//    func displayUpdatedOrder(viewModel: CreateOrder.UpdateOrder.ViewModel)
}

class ContactListViewController: UIViewController, ContactListDisplayLogic
{
  var interactor: ContactListBusinessLogic?
  var router: (NSObjectProtocol & ContactListRoutingLogic & ContactListDataPassing)?

    // MARK: IBOutlets
    @IBOutlet weak var tableView: UITableView!
    // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = ContactListInteractor()
    let presenter = ContactListPresenter()
    let router = ContactListRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = ContactList.FetchContacts.Request()
    interactor?.fetchContacts(request:request)
  }
  
  func displaySomething(viewModel: ContactList.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
}

extension ContactListViewController : UITableViewDataSource, UITableViewDelegate{
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: "ContactCell", for: indexPath)
        return cell
    }
}
